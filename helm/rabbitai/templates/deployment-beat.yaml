{{- if .Values.rabbitaiCeleryBeat.enabled -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "rabbitai.fullname" . }}-celerybeat
  labels:
    app: {{ template "rabbitai.name" . }}-celerybeat
    chart: {{ template "rabbitai.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
{{- if .Values.rabbitaiCeleryBeat.deploymentAnnotations }}
  annotations:
    {{ toYaml .Values.rabbitaiCeleryBeat.deploymentAnnotations | nindent 4 }}
{{- end }}
spec:
  # This must be a singleton
  replicas: 1
  selector:
    matchLabels:
      app: {{ template "rabbitai.name" . }}-celerybeat
      release: {{ .Release.Name }}
  template:
    metadata:
      annotations:
        checksum/rabbitai_config.py: {{ include "rabbitai-config" . | sha256sum }}
        checksum/connections: {{ .Values.rabbitaiNode.connections | toYaml | sha256sum }}
        checksum/extraConfigs: {{ .Values.extraConfigs | toYaml | sha256sum }}
        checksum/extraSecrets: {{ .Values.extraSecrets | toYaml | sha256sum }}
        checksum/extraSecretEnv: {{ .Values.extraSecretEnv | toYaml | sha256sum }}
        checksum/configOverrides: {{ .Values.configOverrides | toYaml | sha256sum }}
        {{ if .Values.rabbitaiCeleryBeat.forceReload }}
        # Optionally force the thing to reload
        force-reload: {{ randAlphaNum 5 | quote }}
        {{ end }}
      {{- if .Values.rabbitaiCeleryBeat.podAnnotations }}
        {{ toYaml .Values.rabbitaiCeleryBeat.podAnnotations | nindent 8 }}
      {{- end }}
      labels:
        app: {{ template "rabbitai.name" . }}-celerybeat
        release: {{ .Release.Name }}
    spec:
      securityContext:
        runAsUser: {{ .Values.runAsUser }}
      {{- if .Values.rabbitaiCeleryBeat.initContainers }}
      initContainers:
      {{-  tpl (toYaml .Values.rabbitaiCeleryBeat.initContainers) . | nindent 6 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: {{  tpl (toJson .Values.rabbitaiCeleryBeat.command) . }}
          env:
            - name: "RABBITAI_PORT"
              value: {{ .Values.service.port | quote}}
          {{ if .Values.extraEnv }}
            {{- range $key, $value := .Values.extraEnv }}
            - name: {{ $key | quote}}
              value: {{ $value | quote }}
            {{- end }}
          {{- end }}
          envFrom:
            - secretRef:
                name: {{ tpl .Values.envFromSecret . | quote }}
          volumeMounts:
            - name: rabbitai-config
              mountPath: {{ .Values.configMountPath | quote }}
              readOnly: true
          resources:
{{ toYaml .Values.resources | indent 12 }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      volumes:
        - name: rabbitai-config
          secret:
            secretName: {{ tpl .Values.configFromSecret . }}
{{- end -}}
